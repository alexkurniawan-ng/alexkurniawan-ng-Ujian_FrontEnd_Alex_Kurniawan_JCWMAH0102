{"version":3,"sources":["assets/images/logoA.png","assets/images/logoBwhite.png","support/url.js","redux/actions/authAction.js","redux/actions/productAction.js","component/signinModal.js","component/navbar.js","pages/about.js","component/carousel.js","pages/homepage.js","pages/product.js","pages/register.js","pages/detailProduct.js","component/addProduct.js","component/editProduct.js","pages/productManagement.js","pages/notFound.js","pages/carouselManagement.js","redux/actions/slideAction.js","pages/cartUser.js","pages/transaction.js","pages/adminTransaction.js","App.js","component/footer.js","serviceWorker.js","redux/reducers/authReducer.js","redux/reducers/slideReducer.js","redux/reducers/index.js","redux/reducers/productReducer.js","index.js"],"names":["module","exports","API_URL","login","data","type","payload","KeepLogin","dispatch","a","Axios","get","localStorage","getItem","console","log","getProducts","SignInModal","props","btToggle","setState","modalOpen","state","handleChange","property","value","btLogin","username","password","alertIsOpen","alertColor","alertMessage","query","includes","Login","loginSuccess","this","setTimeout","regisSuccess","to","Button","color","onClick","Modal","isOpen","ModalHeader","ModalBody","Alert","Input","className","placeholder","onChange","e","target","event","ModalFooter","React","Component","connect","then","res","setItem","id","catch","err","NavbarComponent","btLogout","removeItem","logout","getQty","qtyCart","user","cart","forEach","item","index","qty","getUnique","length","renderCart","map","height","src","images","alt","category","name","size","totalPrice","toLocaleString","collapsed","dropOpen","cartOpen","Navbar","light","expand","NavbarBrand","require","width","NavbarToggler","Collapse","navbar","Nav","NavItem","role","style","marginLeft","Dropdown","direction","toggle","DropdownToggle","caret","Badge","DropdownMenu","DropdownItem","divider","pathname","textDecoration","authReducer","product","productReducers","AboutPage","useState","activeIndex","setActive","animating","setAnimating","next","nextIndex","carousel","previous","prevIndex","slides","CarouselItem","onExiting","onExited","key","image","CarouselCaption","captionHeader","title","Carousel","CarouselIndicators","items","onClickHandler","newIndex","CarouselControl","directionText","HomePage","getCarousel","dbCarousel","Jumbotron","ProductPage","tipe","order","url","renderProduct","dbProducts","sortProduct","products","Col","md","Card","CardImg","top","CardBody","CardTitle","CardText","price","btSort","sort1","sort2","InputGroup","innerRef","RegisterPage","abjad","numb","symbol","test","userValid","userInvalid","userMessage","emailValid","emailMessage","passValue","passLvl","passNotif","btRegister","email","phone","confPassword","Swal","fire","icon","text","post","redirect","backgroundColor","margin","Form","FormGroup","Label","valid","invalid","FormFeedback","FormText","apaaja","terserah","Progress","outline","ProductDetail","getProductDetail","location","search","detail","renderThumbnail","thumbnail","padding","renderStock","stock","disabled","total","code","btIncrement","alert","btAddToCart","idProduct","parseInt","userID","idx","push","patch","redirectStatus","hargaTotal","brand","colour","description","ButtonGroup","float","AddProduct","btSubmit","table","footer","toString","listGambar","getProduct","renderInputStock","sizeShoes","sizeClothing","marginRight","EditProduct","defaultValue","btSave","splice","editClose","editOpen","selectedIdx","ProductManagement","btDelete","delete","renderProducts","params","temp","i","j","totalStock","sort","b","toLowerCase","slice","Table","hover","CarouselManagement","getSlide","renderCardSlide","btEdit","slideImg","slideTitle","btSaveNewSlide","newSlideImg","newSlideTitle","newSlideOpen","slideReducer","slide","CartPage","refreshCart","btDecrement","totalPayment","payment","element","decrementStock","btCheckout","date","Date","obj","iduser","getDate","getMonth","getFullYear","status","indexProduct","findIndex","indexStock","colspan","TransactionPage","getTransaction","dbTransactions","renderDetail","renderTransactions","btPayment","UncontrolledCollapse","toggler","TransactionAdmin","btDetail","btConfirm","collapsOpen","App","dataUser","path","component","exact","NotFound","Boolean","window","hostname","match","INITIAL_STATE","Reducer","combineReducers","action","storeReducer","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.bfd793c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoA.8369382d.png\";","module.exports = __webpack_public_path__ + \"static/media/logoBwhite.1406fabf.png\";","export const API_URL = \"http://localhost:2020\"","import Axios from \"axios\"\r\nimport { API_URL } from \"../../support/url\"\r\n\r\n// fungsi yang mengarahkan data dari component ke reducer\r\nexport const login = (data) => {\r\n    return {\r\n        type: \"LOGIN\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: \"LOGOUT\"\r\n    }\r\n}\r\n\r\n// Versi Redux-Thunk\r\nexport const Login = (query, username, password) => {\r\n    // dispatch sudah baku, harus pakai ini\r\n    return (dispatch) => {\r\n        Axios.get(API_URL + `/users?${query}=${username}&password=${password}`)\r\n        .then((res) => {\r\n            console.log(\"LOGIN Success\", res.data)\r\n            localStorage.setItem(\"id\", res.data[0].id)\r\n            dispatch({\r\n                type: \"LOGIN\",\r\n                payload: res.data[0]\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"LOGIN error\", err)\r\n        })\r\n    }\r\n}\r\n\r\n// export const KeepLogin = () => {\r\n//     return (dispatch) => {\r\n//         let id = localStorage.getItem(\"id\")\r\n//         if (id) {\r\n//             Axios.get(API_URL + `/users?id=${id}`)\r\n//             .then((res) => {\r\n//             console.log(\"SUCCESS KeepLogin: \", res.data)\r\n//             dispatch({\r\n//                 type: \"LOGIN\",\r\n//                 payload: res.data[0]\r\n//                 })          \r\n//             })\r\n//             .catch((err) => {\r\n//             console.log(\"ERR keepLogin: \", err)\r\n//           })\r\n//         }\r\n//     }\r\n//   }\r\n\r\n  export const KeepLogin = () => {\r\n      return async(dispatch) => {\r\n          try {\r\n              let get = await Axios.get(API_URL + `/users/${localStorage.getItem(\"id\")}`)\r\n              dispatch({\r\n                  type: \"LOGIN\",\r\n                  payload: get.data\r\n              })\r\n          } catch (error) {\r\n              console.log(\"KeepLogin Error: \", error)\r\n          }\r\n      }\r\n  }","// fungsi yang mengarahkan data dari component ke reducer\r\nexport const getProducts = (data) => {\r\n    console.log(\"Action products\", data)\r\n    return {\r\n        type: \"GET_PRODUCTS\",\r\n        payload: data\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, Form, Alert, FormGroup, Label, Input, Button, ModalFooter} from 'reactstrap'\r\nimport { API_URL } from '../support/url';\r\nimport Axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect} from 'react-redux';\r\nimport { login, Login } from '../redux/actions';\r\n\r\nclass SignInModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            username: \"\",\r\n            password: \"\",\r\n            modalOpen: false,\r\n            alertMessage: '',\r\n            alertIsOpen: false,\r\n            alertColor: '',\r\n            loginSuccess: false\r\n        }\r\n    }\r\n\r\n    btToggle = () => {\r\n        this.setState({modalOpen: !this.state.modalOpen})\r\n    }\r\n\r\n    handleChange = (property, value) => {\r\n        console.log(property, value)\r\n        this.setState({ [property]: value})\r\n    }\r\n\r\n    btLogin = () => {\r\n        let { username, password } = this.state\r\n        // let username = this.username.value\r\n        // let password = this.password.value\r\n\r\n        if (username === '' || password === '') {\r\n            this.setState({\r\n                alertIsOpen: !this.state.alertIsOpen, \r\n                alertColor: \"warning\", \r\n                alertMessage: \"Form cannot be Empty\"\r\n            })\r\n            \r\n        } else {\r\n            let query = username.includes('@') && username.includes('.') ? `email` : `username`;\r\n            this.props.Login(query, username, password)\r\n            // Axios.get(API_URL + query + `&password=${password}`)\r\n            // .then((res) => {\r\n            //     console.log('POST Login', res.data)\r\n            //     localStorage.setItem(\"id\", res.data[0].id)\r\n            //     // this.setState({\r\n            //     //     alertIsOpen: true, \r\n            //     //     alertColor: \"success\", \r\n            //     //     alertMessage: \"Login Successful\",\r\n            //     //     loginSuccess: true\r\n            //     // })\r\n            //     this.props.login(res.data[0])\r\n            // })\r\n            // .catch((err) => {\r\n            //     console.log('ERR post Register', err)\r\n            //     this.setState({\r\n            //         alertIsOpen: true,\r\n            //         alertColor: \"danger\", \r\n            //         alertMessage: \"Wrong Email or Password\"\r\n            //     })\r\n            // })\r\n        }\r\n    }\r\n\r\n    render() { \r\n        if(this.state.alertIsOpen) {\r\n            setTimeout(() => this.setState({\r\n                alertIsOpen: !this.state.alertIsOpen, \r\n                modalOpen: this.state.regisSuccess ? !this.state.modalOpen : true\r\n            }), \r\n            2000)\r\n            return <Redirect to=\"/\" />\r\n        }\r\n\r\n        return (  \r\n            <>\r\n                <Button color=\"primary\" onClick={this.btToggle}>Login</Button>\r\n                <Modal isOpen={this.state.modalOpen}>\r\n                    <ModalHeader>Login</ModalHeader>\r\n                        <ModalBody>\r\n                            <Alert color={this.state.alertColor} isOpen={this.state.alertIsOpen}>\r\n                                {this.state.alertMessage}\r\n                            </Alert>\r\n                            <Input type=\"text\" className=\"my-3\" placeholder=\"Username/Email\" onChange={e => this.handleChange(\"username\", e.target.value)} />\r\n                            <Input type=\"password\" className=\"my-3\" placeholder=\"Password\" onChange={event => this.handleChange(\"password\", event.target.value)} />\r\n                            {/* <Form>\r\n                                <Alert isOpen={this.state.alertIsOpen} color={this.state.alertColor} toggle={() => this.setState({alertIsOpen: false})}>{this.state.alertMessage}</Alert>\r\n                                <FormGroup>\r\n                                    <Label>Username/Email</Label>\r\n                                    <Input type=\"text\" innerRef={(apaAja) => this.username = apaAja}></Input>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label>Password</Label>\r\n                                    <Input type=\"password\" innerRef={(apaAja) => this.password = apaAja}></Input>\r\n                                </FormGroup>\r\n                            </Form> */}\r\n                        </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"success\" onClick={this.btLogin}>Login</Button>\r\n                        <Button color=\"secondary\" onClick={this.btToggle}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n \r\nexport default connect(null, { login, Login })(SignInModal);","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Button, Collapse, Nav, Navbar, NavbarBrand, NavbarToggler, NavItem, Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Badge, Card, CardImg, CardText, CardSubtitle } from 'reactstrap';\r\nimport SignInModal from './signinModal';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../redux/actions'\r\n// import { API_URL } from \"../support/url\";\r\n// import Axios from \"axios\";\r\n\r\n\r\n\r\nclass NavbarComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            collapsed: false,\r\n            // dataUser: {},\r\n            dropOpen: false,\r\n            cartOpen: false,\r\n         }\r\n    }\r\n\r\n    // keepLogin = () => {\r\n    //     let id = localStorage.getItem(\"id\");\r\n    //     if (id) {\r\n    //       Axios.get(API_URL + `/users?id=${id}`)\r\n    //         .then((res) => {\r\n    //           console.log(\"SUCCESS KeepLogin: \", res.data);\r\n    //           this.setState({ dataUser: res.data[0] });\r\n    //           console.log(\"cek datauser: \", this.state.dataUser);\r\n    //         })\r\n    //         .catch((err) => {\r\n    //           console.log(\"ERR keepLogin: \", err);\r\n    //         });\r\n    //     }\r\n    // };\r\n    \r\n    // componentDidMount() {\r\n    // this.keepLogin();\r\n    // }\r\n\r\n    btLogout = () => {\r\n        localStorage.removeItem(\"id\");\r\n        this.props.logout()\r\n        // this.setState({redirectStatus: true})\r\n    }\r\n\r\n    getQty = () => {\r\n        let qtyCart = 0\r\n        this.props.user.cart.forEach((item, index) => {\r\n            qtyCart += item.qty\r\n        })\r\n        return qtyCart\r\n    }\r\n\r\n    getUnique = () => {\r\n        return this.props.user.cart.length\r\n    }\r\n\r\n    renderCart = () => {\r\n        return this.props.cart.map((item, index) => {\r\n            return (\r\n                // <Card key={index}>\r\n                //     <div className=\"row\">\r\n                //         <CardImg className=\"col-4\" height=\"50px\" src={item.images} lat={item.category} />\r\n\r\n                //     </div>\r\n                //     <div className=\"col-8\">\r\n                //         <CardSubtitle>{item.name}</CardSubtitle>\r\n                //         <CardSubtitle>Size: {item.size}</CardSubtitle>\r\n                //         <CardSubtitle>Qty: {item.qty}</CardSubtitle>\r\n                //         <CardSubtitle>Rp. {item.totalPrice.toLocaleString()}</CardSubtitle>\r\n\r\n                //     </div>\r\n                // </Card>\r\n                <div className=\"row\">\r\n                    <div className=\"col-4\">\r\n                        <img height=\"50px\" src={item.images} alt={item.category} />\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        <p>{item.name}</p>\r\n                        <p>Size: {item.size}</p>\r\n                        <p>Qty: {item.qty}</p>\r\n                        <p>Rp. {item.totalPrice.toLocaleString()}</p>\r\n                   </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    render() { \r\n        let { user } = this.props\r\n        // karena redirect di navbar yg notabene selalu ada, ada perlakuan KHUSUS\r\n        \r\n        // bisa juga cara ini:\r\n        // if (!localStorage.getItem(\"id\")) {\r\n        // if (this.state.redirectStatus) {\r\n        //     return <Redirect to=\"/\" />\r\n        // }\r\n\r\n        return (  \r\n            <div>\r\n                <Navbar color=\"faded\" light expand=\"md\">\r\n                    <NavbarBrand>\r\n                        <Link to='/' className=\"nav-link\">\r\n                            <img src={require('../assets/images/logoA.png')} width=\"50px\" alt=\"brand\" />\r\n                        </Link>\r\n                    </NavbarBrand>\r\n                    <NavbarToggler onClick={() => this.setState({collapsed: !this.state.collapsed})} className=\"mr-2\" />\r\n                    <Collapse isOpen={this.state.collapsed} navbar>\r\n                        <Nav className=\"mr-auto\" navbar>\r\n                            <NavItem>\r\n                                <Link to='/product' className=\"nav-link\">Product</Link>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <Link to='/about' className=\"nav-link\">About</Link>\r\n                            </NavItem>\r\n                            {\r\n                                user.role && user.role===\"admin\" ?\r\n                                <>\r\n                                    <NavItem>\r\n                                        <Link to='/product-admin' className=\"nav-link\">PM</Link>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <Link to='/carousel-admin' className=\"nav-link\">CM</Link>\r\n                                    </NavItem>\r\n                                </>\r\n                                :\r\n                                null\r\n                            }\r\n                            <div style={{marginLeft: '70vw'}}>\r\n                                {\r\n                                    user.id ?\r\n                                        user.role===\"user\" ?\r\n                                        <div className=\"d-flex\">\r\n                                        <Dropdown direction=\"left\" isOpen={this.state.cartOpen} toggle={() => this.setState({ cartOpen: !this.state.cartOpen })}>\r\n                                            <DropdownToggle caret>\r\n                                                🛒 <Badge color=\"danger\">{this.getUnique()}</Badge>\r\n                                            </DropdownToggle>\r\n                                            <DropdownMenu>\r\n                                                {this.renderCart()}\r\n                                                <DropdownItem divider/>\r\n                                                <DropdownItem>\r\n                                                    <Link to='/cart'>\r\n                                                        Go To Cart \r\n                                                    </Link>\r\n                                                </DropdownItem>\r\n                                            </DropdownMenu>\r\n                                        </Dropdown>\r\n                                        <Dropdown isOpen={this.state.dropOpen} toggle={() => this.setState({ dropOpen: !this.state.dropOpen })}>\r\n                                            <DropdownToggle caret>\r\n                                                {user.username}\r\n                                            </DropdownToggle>\r\n                                            <DropdownMenu>\r\n                                                <DropdownItem>Profile</DropdownItem>\r\n                                                <DropdownItem>\r\n                                                    <Link to='/cart'>\r\n                                                        Cart <Badge color=\"danger\">{this.getQty()}</Badge>\r\n                                                    </Link>\r\n                                                </DropdownItem>\r\n                                                <DropdownItem>\r\n                                                    <Link to='/transaction'>\r\n                                                        Transaction\r\n                                                    </Link>\r\n                                                </DropdownItem>\r\n                                                <DropdownItem onClick={this.btLogout}>Log Out</DropdownItem>\r\n                                            </DropdownMenu>\r\n                                        </Dropdown>\r\n                                        </div>\r\n                                        :\r\n                                        <Dropdown direction=\"left\" isOpen={this.state.dropOpen} toggle={() => this.setState({ dropOpen: !this.state.dropOpen })}>\r\n                                            <DropdownToggle caret>\r\n                                                {user.username}\r\n                                            </DropdownToggle>\r\n                                            <DropdownMenu>\r\n                                                <DropdownItem>\r\n                                                    <Link to='/product-admin' className=\"nav-link\">Product Management</Link>\r\n                                                </DropdownItem>\r\n                                                <DropdownItem>\r\n                                                    <Link to='/transaction-admin' className=\"nav-link\">Transaction Management</Link>\r\n                                                </DropdownItem>\r\n                                                <DropdownItem>\r\n                                                    <Link to='/carousel-admin' className=\"nav-link\">Slide Management</Link>\r\n                                                </DropdownItem>\r\n                                                <DropdownItem divider />\r\n                                                <DropdownItem onClick={this.btLogout} style={{color: \"red\"}}>Log Out</DropdownItem>\r\n                                            </DropdownMenu>\r\n                                        </Dropdown>\r\n                                    :\r\n                                    <>\r\n                                        <SignInModal/>\r\n                                        <Button color=\"secondary\" size=\"small\">\r\n                                            <Link to={{pathname: '/register'}} style={{textDecoration: \"none\", color: \"white\"}}>\r\n                                                Register\r\n                                            </Link>\r\n                                        </Button>\r\n                                    </>\r\n                                }\r\n                                {/* {\r\n                                    localStorage.getItem(\"id\") > 0\r\n                                    ?\r\n                                    <Dropdown isOpen={this.state.dropOpen} toggle={() => this.setState({ dropOpen: !this.state.dropOpen })}>\r\n                                        <DropdownToggle>\r\n                                            {this.state.dataUser.username}\r\n                                        </DropdownToggle>\r\n                                        <DropdownMenu>\r\n                                            <DropdownItem>Profile</DropdownItem>\r\n                                            <DropdownItem onClick={this.btLogout}>Log Out</DropdownItem>\r\n                                        </DropdownMenu>\r\n                                    </Dropdown>\r\n                                    :\r\n                                    <>\r\n                                        <SignInModal keep={this.keepLogin} />\r\n                                        <Button color=\"secondary\" size=\"small\">\r\n                                            <Link to='/register'style={{textDecoration: \"none\", color: \"white\"}}>\r\n                                                Register\r\n                                            </Link>\r\n                                        </Button>\r\n                                    </>\r\n                                } */}\r\n                            </div>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(\"cekDataCart\", state.authReducer)\r\n    return {\r\n        user: state.authReducer,\r\n        cart: state.authReducer.cart,\r\n        id: state.authReducer.id,\r\n        product: state.productReducers\r\n    }\r\n}\r\n\r\n \r\nexport default connect(mapStateToProps, {logout})(NavbarComponent);","import React from 'react';\r\n\r\nclass AboutPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return (  \r\n            <div className=\"container\">\r\n                ini About\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default AboutPage;","import React, { useState } from 'react';\r\nimport { Carousel, CarouselCaption, CarouselControl, CarouselIndicators, CarouselItem } from 'reactstrap';\r\n\r\nexport default (props) => {\r\n    const [activeIndex, setActive] = useState(0)\r\n    const [animating, setAnimating] = useState(false)\r\n\r\n    const next = () => {\r\n        if (animating) return\r\n        const nextIndex = activeIndex === props.carousel.length -1 ? 0 : activeIndex + 1\r\n        setActive(nextIndex)\r\n    }\r\n    \r\n    const previous = () => {\r\n        if (animating) return\r\n        const prevIndex = activeIndex === 0 ? props.carousel.length -1 : activeIndex - 1\r\n        setActive(prevIndex)\r\n    }\r\n\r\n    const goToIndex = (newIndex) => {\r\n        if (animating) return;\r\n        setActive(newIndex)\r\n    }\r\n\r\n    const slides = props.carousel.map((item, index) => {\r\n        return (\r\n            <CarouselItem \r\n                onExiting={() => setAnimating(true)}\r\n                onExited={() => setAnimating(false)}\r\n                key={index}\r\n            >\r\n                <img src={item.image} alt={`slide-${index}`} />\r\n                <CarouselCaption captionHeader={item.title} />\r\n            </CarouselItem>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <Carousel\r\n            activeIndex={activeIndex}\r\n            next={next}\r\n            previous={previous}\r\n        >\r\n            <CarouselIndicators items={props.carousel} activeIndex={activeIndex} onClickHandler={goToIndex} />\r\n            {slides}\r\n            <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\r\n            <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\r\n        </Carousel>\r\n    )\r\n}","import React from 'react';\r\nimport { Button, Jumbotron } from 'reactstrap';\r\nimport CarouselComp from '../component/carousel';\r\nimport Axios from 'axios';\r\nimport { API_URL } from '../support/url';\r\nimport \"../App.css\";\r\n\r\nclass HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            dbCarousel: []\r\n        }\r\n    }\r\n\r\n    getCarousel = () => {\r\n        Axios.get(API_URL + '/carousel')\r\n        .then((res) => {\r\n            console.log(\"GET getCarousel: \", res.data)\r\n            this.setState({ dbCarousel: res.data})\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"ERR getCarousel: \", err)\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCarousel()\r\n    }\r\n\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"container\">\r\n                <Jumbotron className=\"jumboBanner\">\r\n                    <h1 className=\"display-3 py-5\">Welcome to SIMPLE SHOP</h1>\r\n                    <hr className=\"my-2\" />\r\n                    <p>This is the new world of Sport</p>\r\n                    <p className=\"lead\">\r\n                        <Button color=\"primary\" size=\"sm\">Shop Now</Button>\r\n                    </p>\r\n                </Jumbotron>\r\n                <CarouselComp carousel={this.state.dbCarousel} />\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default HomePage;","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Input, InputGroup } from 'reactstrap';\r\nimport { API_URL } from '../support/url';\r\nimport { connect } from 'react-redux';\r\nimport { getProducts } from '../redux/actions'\r\n\r\nclass ProductPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            isOpen: \"false\",\r\n            sortProduct: \"default\",\r\n            // dbProducts: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getProducts()\r\n    }\r\n\r\n    getProducts = (tipe, order) => {\r\n        \r\n        let url = tipe ? order? `/products?_sort=${tipe}&_order=${order}` : `/products?category=${tipe}` : \"/products\"\r\n        // console.log(sort1, sort2)\r\n        Axios.get(API_URL + url)\r\n            .then((res) => {\r\n                console.log(\"GET Products: \", res.data)\r\n                // this.setState({dbProducts: res.data})\r\n                // this.renderProduct()\r\n                this.props.getProducts(res.data)\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERR getProducts: \", err)\r\n            })\r\n\r\n\r\n        // if (this.state.sortProduct !== \"default\") {\r\n        //     Axios.get(API_URL + `/products?category=${this.state.sortProduct}`)\r\n        //     .then((res) => {\r\n        //         console.log(\"GET Products: \", res.data)\r\n        //         this.setState({getProducts: res.data})\r\n        //     })\r\n        //     .catch((err) => {\r\n        //         console.log(\"ERR getProducts: \", err)\r\n        //     })\r\n        // }\r\n\r\n        // else {\r\n\r\n            // Axios.get(API_URL + '/products')\r\n            // .then((res) => {\r\n            //     console.log(\"GET Products: \", res.data)\r\n            //     this.setState({dbProducts: res.data})\r\n            // })\r\n            // .catch((err) => {\r\n            //     console.log(\"ERR getProducts: \", err)\r\n            // })\r\n        // // }\r\n        \r\n    }\r\n    \r\n\r\n    renderProduct = () => {\r\n        console.log(\"cek variable products\", this.state.dbProducts)\r\n        console.log(\"cek state sortproduct\", this.state.sortProduct)\r\n        console.log(API_URL + `/products?_sort=id&_order=desc`)\r\n        return this.props.products.map((item, index) => {\r\n            return (\r\n                <Col md=\"4\" key={index} className=\"my-2\">\r\n                    <Card>\r\n                        <Link to={`/product-detail?id=${item.id}`}>\r\n                            <CardImg top width=\"25%\" src={item.images[0]} />\r\n                            <CardBody>\r\n                                <CardTitle style={{height:\"10vh\"}}>{item.name}</CardTitle>\r\n                                <CardText className=\"text-muted\">Rp. {item.price.toLocaleString()},-</CardText>\r\n                            </CardBody>\r\n                        </Link>\r\n                    </Card>\r\n                </Col>\r\n            )\r\n        })\r\n    }\r\n\r\n    // Versi non Ujian\r\n\r\n    // renderProduct = (params) => {\r\n    //     let products = [...this.props.products]\r\n    //     console.log(\"cek variable products\", products)\r\n\r\n    //     if (params === \"asc\") {\r\n    //         products.sort((a, b) => (a.name > b.name && 1) || (a.name === b.name ? 0 : -1))\r\n    //         // console.log(\"product sort asc\", products)\r\n    //     } else if ( params === \"desc\") {\r\n    //         products.sort((a, b) => (a.name < b.name && 1) || (a.name === b.name ? 0 : -1))\r\n    //     }\r\n\r\n    //     return products.map((item, index) => {\r\n    //         return (\r\n    //             <Col md=\"4\" key={index} className=\"my-2\">\r\n    //                 <Card>\r\n    //                     <Link to={`/product-detail?id=${item.id}`}>\r\n    //                         <CardImg top width=\"25%\" src={item.images[0]} />\r\n    //                         <CardBody>\r\n    //                             <CardTitle style={{height:\"10vh\"}}>{item.name}</CardTitle>\r\n    //                             <CardText className=\"text-muted\">Rp. {item.price.toLocaleString()},-</CardText>\r\n    //                         </CardBody>\r\n    //                     </Link>\r\n    //                 </Card>\r\n    //             </Col>\r\n    //         )\r\n    //     })\r\n    // }\r\n\r\n    btSort = () => {\r\n        let sort1 = this.sort1.value\r\n        let sort2 = this.sort2.value\r\n\r\n        console.log(sort1, sort2)\r\n        Axios.get(API_URL + `/products?_sort=id&_order=desc`)\r\n            .then((res) => {\r\n                console.log(\"GET Products: \", res.data)\r\n                this.setState({dbProducts: res.data})\r\n                this.renderProduct()\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERR getProducts: \", err)\r\n            })\r\n\r\n    }\r\n\r\n    render() { \r\n        return (  \r\n            <div className=\"container\">\r\n                <div className=\"d-flex\">\r\n                    <Button color=\"primary\" onClick={() => this.getProducts()}>All Product</Button>\r\n                    <Dropdown isOpen={!this.state.isOpen} toggle={() => this.setState({isOpen: !this.state.isOpen})} >\r\n                        <DropdownToggle color=\"primary\" caret />\r\n                        <DropdownMenu>\r\n                            <DropdownItem onClick={() => this.getProducts(\"Shoes\")}>Shoes</DropdownItem>\r\n                            <DropdownItem onClick={() => this.getProducts(\"Clothing\")}>Clothing</DropdownItem>\r\n                        </DropdownMenu>\r\n                    </Dropdown>\r\n                    <div className=\"ml-5\">\r\n                        <InputGroup>\r\n                            <Input type=\"select\" innerRef={(value) => this.sort1 = value} >\r\n                                <option>asc</option>\r\n                                <option>desc</option>\r\n                            </Input>\r\n                            <Input type=\"select\" innerRef={(value) => this.sort2 = value} >\r\n                                <option>id</option>\r\n                                <option>name</option>\r\n                                <option>price</option>\r\n                            </Input>\r\n                            <Button onClick={() => this.getProducts(this.sort2.value, this.sort1.value)}>OK</Button>\r\n                        </InputGroup>\r\n                    </div>\r\n                </div>\r\n                {/* <Dropdown direction=\"right\" isOpen={!this.state.isOpen} toggle={() => this.setState({isOpen: !this.state.isOpen})} >\r\n                    <DropdownToggle caret>\r\n                        Sort by\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                        <DropdownItem onClick={() => {this.setState({sortProduct: \"default\"})}}>Default</DropdownItem>\r\n                        <DropdownItem divider />\r\n                        <DropdownItem onClick={() => {this.setState({sortProduct: \"asc\"})}}>Ascending</DropdownItem>\r\n                        <DropdownItem onClick={() => {this.setState({sortProduct: \"desc\"})}}>Descending</DropdownItem>\r\n                    </DropdownMenu>\r\n                </Dropdown> */}\r\n                <div className=\"row\">\r\n                  {this.renderProduct()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({productReducers}) => {\r\n    console.log(\"mapstate\", productReducers)\r\n    return {\r\n        products: productReducers\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getProducts})(ProductPage);\r\n","import React from 'react';\r\nimport { Button, Form, FormFeedback, FormGroup, FormText, Input, Jumbotron, Label, Progress } from 'reactstrap';\r\nimport { API_URL } from '../support/url';\r\nimport Axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass RegisterPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confPassword: '',\r\n            userValid: false,\r\n            userInvalid: false,\r\n            emailValid: false,\r\n            passValue: 0,\r\n            passLvl: '',\r\n            passNotif: '',\r\n            userMessage: 'Username Invalid',\r\n            emailMessage: 'Email Invalid'\r\n        }\r\n    }\r\n\r\n    handleChange = (property, value) => {\r\n        // String validation with regex\r\n        // let abjad = /[a-zA-Z0-9]/\r\n        // i untuk huruf termasuk uppercase\r\n        let abjad = /[a-z]/i\r\n        let numb = /[0-9]/\r\n        let symbol = /[!@#$%^&*():;]/\r\n        let domain = /(.id|.com|.org|.co.id|.edu|.tech)/\r\n        console.log(property, abjad.test(value))\r\n\r\n        // console.log(property, value)\r\n        // Membuat properti objek menggunakan string, [\"namaProperty\"]\r\n        this.setState({ [property]: value})\r\n\r\n        if (property === \"username\") {\r\n            // username harus terdiri dari abjad dan angka\r\n            this.setState({\r\n                userValid: abjad.test(value) && numb.test(value) ? true : false,\r\n                userInvalid: abjad.test(value) && numb.test(value) ? false : true\r\n            })\r\n            // Mengecek username apakah ada yg sama di server di setiap input form diisi\r\n            Axios.get(API_URL + `/users?username=${value}`)\r\n            .then((res) => {\r\n                if(res.data.length > 0) {\r\n                    this.setState({userMessage: \"Username already Exist\", userValid: false})\r\n                } else {\r\n                    this.setState({userMessage: \"Username Invalid\"})\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n        } else if (property === \"email\") {\r\n            // username harus terdiri dari abjad dan angka\r\n            this.setState({\r\n                emailValid: abjad.test(value) && domain.test(value) && value.includes('@') ? true : false,\r\n            })\r\n            // Mengecek email apakah ada yg sama di server di setiap input form diisi\r\n            Axios.get(API_URL + `/users?email=${value}`)\r\n            .then((res) => {\r\n                if(res.data.length > 0) {\r\n                    this.setState({emailMessage: \"Email already Exist\", emailValid: false})\r\n                    console.log(\"cek email exist\")\r\n                } else {\r\n                    this.setState({emailMessage: \"Email Invalid\"})\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n        } else if (property === \"password\") {\r\n            if (abjad.test(value) && !numb.test(value) && !symbol.test(value) && value.length > 3) {\r\n                this.setState({passValue: 30, passLvl: \"Weak\", passNotif: \"danger\"})\r\n            } else if (abjad.test(value) && numb.test(value) && !symbol.test(value) && value.length > 3) {\r\n                this.setState({passValue: 50, passLvl: \"Medium\", passNotif: \"warning\"})\r\n            } else if (abjad.test(value) && !numb.test(value) && symbol.test(value) && value.length > 3) {\r\n                this.setState({passValue: 50, passLvl: \"Medium\", passNotif: \"warning\"})\r\n            } else if (abjad.test(value) && numb.test(value) && symbol.test(value) && value.length > 7) {\r\n                this.setState({passValue: 100, passLvl: \"Strong\", passNotif: \"success\"})\r\n            } else if (abjad.test(value) && numb.test(value) && symbol.test(value) && value.length > 5) {\r\n                this.setState({passValue: 80, passLvl: \"Strong\", passNotif: \"success\"})\r\n            } else if (!abjad.test(value) && !numb.test(value) && symbol.test(value) && value.length > 3) {\r\n                this.setState({passValue: 30, passLvl: \"Weak\", passNotif: \"danger\"})\r\n            } else if (!abjad.test(value) && numb.test(value) && !symbol.test(value) && value.length > 3) {\r\n                this.setState({passValue: 30, passLvl: \"Weak\", passNotif: \"danger\"})\r\n            } else {\r\n                this.setState({passValue: 0, passLvl: \"\", passNotif: \"\"})\r\n            }\r\n        }\r\n    }\r\n\r\n    // onChange versi normal\r\n    // handleChange = (event) => {\r\n        // console.log(event.target.value)\r\n        // this.setState({username: event.target.value})\r\n    // }\r\n\r\n    btRegister = () => {\r\n        // -Get Data menggunakan innerRef-\r\n        // let username = this.username.value\r\n        // let email = this.email.value\r\n        // let phone = this.phone.value\r\n        // let password = this.password.value\r\n        // let confPassword = this.confPassword.value\r\n\r\n        // Data dari state\r\n        let {username, email, phone, password, confPassword, userValid, emailValid} = this.state\r\n\r\n        // console.log(\"cek input\", username, email, phone, password, confPassword)\r\n        if (username === '' || email === '' || phone === '' || password === '' || confPassword === '') {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Fill in the form'\r\n            })\r\n        } else {\r\n            if (password === confPassword && userValid && emailValid) {\r\n                Axios.get(API_URL + `/users?username=${username}`)\r\n                .then((res) => {\r\n                    console.log('cek search username: ', res.data)\r\n                    if (res.data.length === 0) {\r\n                        Axios.post(API_URL + '/users', {username, email, phone, password, role: \"user\", cart: []})\r\n                        .then((res) => {\r\n                            console.log(\"RES btRegister: \", res.data)\r\n                            this.setState({ redirect: true })\r\n                            Swal.fire({\r\n                                icon: 'success',\r\n                                title: 'Congratulations',\r\n                                text: 'Register Success'\r\n                            })\r\n                            // Axios.get(API_URL + `/users?id=${res.data.id}`)\r\n                            // .then((res) => {\r\n                            //     localStorage.setItem(\"id\", res.data[0].id)\r\n                            // })\r\n                            // .catch((err) => {\r\n                            //     console.log(\"error login dari regiterpage: \", err)\r\n                            // })\r\n                        })\r\n                        .catch((err) => {\r\n                            console.log(\"ERR btRegister: \", err)\r\n                        })\r\n        \r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oppsss',\r\n                            text: 'User already Exist'\r\n                        })\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERR get search username\", err)\r\n                })\r\n\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Your Password not Match'\r\n                })\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() { \r\n        if(this.state.redirect) {\r\n            return <Redirect to='/'  />\r\n        }\r\n\r\n        // console.log('username', this.state.username)\r\n        return (  \r\n            <div className=\"container\">\r\n                <Jumbotron className=\"my-5\" style={{backgroundColor:\"#404146\"}}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-sm-7\">\r\n                            <img src={require('../assets/images/logoBwhite.png')} alt=\"logo\" width=\"100%\" style={{margin: '10% auto'}} />\r\n                            <hr style={{backgroundColor: 'white'}} />\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-5\">\r\n                            <Form>\r\n                                <FormGroup>\r\n                                    <Label className=\"text-white\">Username</Label>\r\n                                    <Input type=\"text\" innerRef={(item) => this.username = item} onChange={(event) => this.handleChange('username', event.target.value)} valid={this.state.userValid} invalid={this.state.username.length > 0 && !this.state.userValid}/>\r\n                                    <FormFeedback valid>Username Valid</FormFeedback>\r\n                                    <FormFeedback>{this.state.userMessage}</FormFeedback>\r\n                                    <FormText color=\"white\">Username must contains alphabet and number</FormText>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label className=\"text-white\">Email</Label>\r\n                                    <Input type=\"text\" innerRef={(apaaja) => this.email = apaaja} onChange={(e) => this.handleChange('email', e.target.value)} valid={this.state.emailValid} invalid={!this.state.emailValid}/>\r\n                                    <FormFeedback valid>Email Format Valid</FormFeedback>\r\n                                    <FormFeedback>{this.state.emailMessage}</FormFeedback>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label className=\"text-white\">Phone</Label>\r\n                                    <Input type=\"text\" innerRef={(terserah) => this.phone = terserah} onChange={(e) => this.handleChange('phone', e.target.value)} />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label className=\"text-white\">Password</Label>\r\n                                    <Input type=\"password\" placeholder=\"Min. 6 Char (abjad, number, symbol)\" innerRef={(value) => this.password = value} onChange={(event) => this.handleChange('password', event.target.value)} />\r\n                                    {   \r\n                                        //ternary tidak perlu : null\r\n                                        this.state.password.length > 3 &&\r\n                                        <Progress value={this.state.passValue} color={this.state.passNotif}>{this.state.passLvl}</Progress>\r\n                                    }\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label className=\"text-white\">Confirm Password</Label>\r\n                                    <Input type=\"password\" innerRef={(value) => this.confPassword = value} onChange={e => this.handleChange('confPassword', e.target.value)} />\r\n                                </FormGroup>\r\n                            </Form>\r\n                            <Button outline color=\"info\" onClick={this.btRegister} >Register</Button>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default RegisterPage;","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Button, ButtonGroup, Input, Jumbotron } from 'reactstrap';\r\nimport { API_URL } from '../support/url';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass ProductDetail extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            detail: {},\r\n            thumbnail: 0,\r\n            total: 0,\r\n            size: '',\r\n            qty: 0,\r\n            hargaTotal: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getProductDetail()\r\n    }\r\n\r\n    getProductDetail = () => {\r\n        // mendapatkan id product\r\n        console.log(this.props.location.search)\r\n\r\n        Axios.get(API_URL + `/products${this.props.location.search}`)\r\n        .then((res) => {\r\n            console.log(\"GET productDetail: \", res.data)\r\n            this.setState({detail: res.data[0]})\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"ERR getProductDetail: \", err)\r\n        })\r\n    }\r\n\r\n    renderThumbnail = (images) => {\r\n        return images.map((item, index) => {\r\n            return (\r\n                <div className=\"flex-grow-1 select-image\" onClick={() => {this.setState({thumbnail:index})}} style={{padding:\"0 1px\"}}>\r\n                    <img src={item} key={index} width=\"100%\" />\r\n                </div> \r\n            )\r\n        })\r\n    }\r\n\r\n    renderStock = (stock) => {\r\n        return stock.map((item, index) => {\r\n            return (\r\n                // item.total > 0 ?\r\n                // &&\r\n                <Button disabled={item.total === 0 && true} onClick={() => this.setState({ total: item.total, size: item.code})} key={index}>{item.code}</Button>\r\n            )\r\n        })\r\n    }\r\n\r\n    btIncrement = () => {\r\n        // note : masih kurang sempurna jika sudah terlanjur > stock\r\n        if(this.state.qty < this.state.total) {\r\n            this.setState({ qty: this.state.qty += 1})\r\n        } else {\r\n            alert(\"out of stock\")\r\n        }\r\n    }\r\n\r\n    btAddToCart = () => {\r\n        console.log(\"Add to Cart\", this.state.detail.id, this.state.detail.price, this.state.qty)\r\n        let idProduct = this.state.detail.id\r\n        let name = this.state.detail.name\r\n        let images = this.state.detail.images[0]\r\n        let category = this.state.detail.category\r\n        let size = this.state.size\r\n        let price = parseInt(this.state.detail.price)\r\n        let qty = this.state.qty\r\n        let totalPrice = qty * price\r\n        let userID = localStorage.getItem(\"id\")\r\n\r\n\r\n        this.state.detail.forEach((item, index) => {\r\n            this.props.product.forEach((value, idx) => {\r\n                if (item.idProduct === value.id) {\r\n\r\n                console.log(\"sama\", item.idProduct, value.id)\r\n                // let indexStock = value.stock.findIndex(element => element.code == item.size)\r\n                // console.log(value.stock[indexStock])\r\n                // value.stock[indexStock].total -= item.qty\r\n                // this.decrementStock(value.id, {stock: value.stock})\r\n                }\r\n            })\r\n        })\r\n        \r\n        \r\n        this.props.cart.push({\r\n            idProduct: idProduct,\r\n            name: name, \r\n            images: images, \r\n            category: category, \r\n            size: size, \r\n            price: price, \r\n            qty: qty, \r\n            totalPrice: totalPrice\r\n        })\r\n\r\n\r\n        Axios.patch(API_URL + `/users/${userID}`, {cart: this.props.cart})\r\n            .then((res) => {\r\n                console.log(\"SUCCESS addtoCart: \", res.data)\r\n                this.setState({ redirectStatus: true })\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERR addtoCart: \", err)\r\n            })\r\n    \r\n        }\r\n\r\n    \r\n\r\n    render() { \r\n        let { detail, thumbnail } = this.state\r\n        if (this.state.redirectStatus) {\r\n           return <Redirect to=\"/cart\" />\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                {\r\n                    detail.id &&\r\n                    <Jumbotron className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <img src={detail.images[thumbnail]} width=\"100%\" />\r\n                            <div className=\"d-flex mt-1\">\r\n                                {this.renderThumbnail(detail.images)}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"row mb-3\">\r\n                                <div className=\"col-md-7\">\r\n                                    <h3 className=\"font-italic\" >{detail.name}</h3>\r\n                                </div>\r\n                                <div className=\"col-md-5\">\r\n                                    <h3 className=\"font-weight-bold\">IDR. {parseInt(detail.price).toLocaleString()}</h3>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-3\">\r\n                                <div className=\"col-md-3\">\r\n                                    <h6 className=\"text-muted font-weight-bold\">Brand</h6>\r\n                                    <h5>{detail.brand}</h5>\r\n                                </div>\r\n                                <div className=\"col-md-3\">\r\n                                    <h6 className=\"text-muted font-weight-bold\">Category</h6>\r\n                                    <h5>{detail.category}</h5>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <h6 className=\"text-muted font-weight-bold\">Colour</h6>\r\n                                    <h5>{detail.colour}</h5>\r\n                                </div>\r\n                            </div>\r\n                            <p className=\"text-justify\">{detail.description}</p>\r\n                            <div className=\"text-center\">\r\n                                <ButtonGroup>\r\n                                    {this.renderStock(detail.stock)}\r\n                                </ButtonGroup>\r\n                                {\r\n                                    this.state.total !== 0 ?\r\n                                    this.state.total <=1 ?\r\n                                    <p style={{color: \"red\"}}>Last Stock!</p>\r\n                                    :\r\n                                    <p>Stock Available: {this.state.total}</p>\r\n                                    :\r\n                                    <p className=\"text-muted\">click size to display stock</p>\r\n                                }\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                {/* <Button outline color=\"primary\" onClick={() => this.setState({qty: this.state.qty - 1})}>-</Button>\r\n                                <Input className=\"text-center\" value={this.state.qty} style={{width: \"50px\"}} />\r\n                                <Button outline color=\"primary\" onClick={() => this.setState({qty: this.state.qty + 1})}>+</Button> */}\r\n                                <Button outline color=\"primary\" onClick={() => this.setState({qty: this.state.qty > 0 ? this.state.qty -= 1 : 0})}>-</Button>\r\n                                <Input className=\"text-center\" value={this.state.qty} style={{width: \"50px\"}} />\r\n                                <Button outline color=\"primary\" onClick={this.btIncrement}>+</Button>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-8\">\r\n                                <h4>IDR: {(this.state.qty * detail.price).toLocaleString()}</h4>\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <Button color=\"success\" style={{float: \"right\"}} onClick={this.btAddToCart}>Add to Cart</Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Jumbotron>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(\"Cek Data\", state.authReducer)\r\n    return {\r\n        cart : state.authReducer.cart,\r\n        product: state.productReducers\r\n    }\r\n}\r\n \r\nexport default connect(mapStateToProps)(ProductDetail);","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Button, CustomInput, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\nimport Swal from 'sweetalert2';\r\nimport { API_URL } from '../support/url'\r\n\r\nclass AddProduct extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            modalOpen: false,\r\n            name: '',\r\n            image: '',\r\n            brand: '',\r\n            category: '',\r\n            colour: '',\r\n            description: '',\r\n            price: 0,\r\n            sizeShoes: [38, 39, 40, 41, 42],\r\n            sizeClothing: [\"S\", \"M\", \"L\", \"XL\", \"XXL\"],\r\n            listGambar: [\"images1\", \"images2\", \"images3\", \"images4\", \"images5\"]\r\n        }\r\n    }\r\n\r\n    handleChange = (property, value) => {\r\n        console.log(property, value)\r\n        this.setState({ [property]: value})\r\n    }\r\n\r\n    btSubmit = () => {\r\n        console.table(this.state)\r\n        let stock = [], images = []\r\n        let { name, brand, category, colour, description, price } = this.state\r\n        \r\n        if (name === '' || brand === '' || category === '' || colour === '' || description === '' || price === '') {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Please Fill all Form',\r\n                footer: '<a href>Why do I have this issue?</a>'\r\n              })\r\n        } else {\r\n            this.state[`size${this.state.category}`].forEach((item, index) => {\r\n                stock.push({code: item.toString(), total: this[`code${item}`].value === '' ? 0 : parseInt(this[`code${item}`].value) })\r\n            })\r\n    \r\n            this.state.listGambar.forEach((item, index) => {\r\n                if (this[item].value.length > 0) {\r\n                    images.push(this[item].value)\r\n                }\r\n            })\r\n\r\n            Axios.post(API_URL + '/products', {name, category, brand, colour, description, price, stock, images})\r\n            .then((res) => {\r\n                console.log(\"RES btSubmit Addproduct: \", res.data)\r\n                this.props.getProduct()\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Congratulations',\r\n                    text: 'Product Successfully Added'\r\n                })\r\n                this.setState({modalOpen: !this.state.modalOpen})\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERR Post AddProduct\", err)\r\n            })\r\n        }\r\n        \r\n\r\n        console.table(stock)\r\n        console.table(images)\r\n    }\r\n\r\n    renderInputStock = () => {\r\n        // mengapa 2 return ? karena return dalam map untuk mengembalikan kedalam map (formgroup 28, formgroup 29) lalu return diluar untuk menggabungkan hasil map\r\n        let { category } = this.state\r\n        if ( category === \"\") {\r\n            return <h5>Waiting Category</h5>\r\n        } else {\r\n            return this.state[`size${category}`].map((item, index) => {\r\n                return (\r\n                    <FormGroup key={index}>\r\n                        <Label>{item}</Label>\r\n                        <Input type=\"number\" innerRef={(value) => this[`code${item}`] = value} />\r\n                    </FormGroup>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    render() { \r\n        let {modalOpen} = this.state\r\n        return (  \r\n            <div style={{float: \"right\", marginRight:\"2vw\"}}>\r\n                <Button color=\"info\" onClick={() => this.setState({modalOpen: !modalOpen})} toggle>Add Product</Button>\r\n                <Modal isOpen={modalOpen}>\r\n                    <ModalHeader>Add Product</ModalHeader>\r\n                    <ModalBody>\r\n                        <FormGroup>\r\n                            <Label>Name</Label>\r\n                            <Input type=\"text\" onChange={event => {this.handleChange(\"name\", event.target.value)}} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label>Image</Label>\r\n                            <div className=\"d-flex flex-wrap\">\r\n                                {\r\n                                    this.state.listGambar.map((item, index) => {\r\n                                        return <Input style={{width: \"30%\"}} placeholder={`Images ${index + 1}`} \r\n                                                type=\"text\"  innerRef={value => this[item] = value} />\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            {/* <Input type=\"text\" onChange={event => {this.handleChange(\"image\", event.target.value)}} /> */}\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <FormGroup className=\"col-4\">\r\n                                    <Label>Brand</Label>\r\n                                    <Input type=\"text\" onChange={event => {this.handleChange(\"brand\", event.target.value)}} />\r\n                            </FormGroup>\r\n                            <FormGroup className=\"col-4\">\r\n                                    <Label>Category</Label>\r\n                                    <Input type=\"select\" placeholder=\"choose category\" onChange={event => {this.handleChange(\"category\", event.target.value)}}>\r\n                                        <option>Shoes</option>\r\n                                        <option>Clothing</option>\r\n                                    </Input>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"col-4\">\r\n                                    <Label>Colour</Label>\r\n                                    <Input type=\"text\" onChange={event => {this.handleChange(\"colour\", event.target.value)}} />\r\n                            </FormGroup>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label>Description</Label>\r\n                            <Input type=\"textarea\" onChange={event => {this.handleChange(\"description\", event.target.value)}} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label>Stock</Label>\r\n                            <div className=\"d-flex\">\r\n                                {this.renderInputStock()}\r\n                                    {/* <FormGroup className=\"flex-grow-1\">\r\n                                        <Label for={`code${item}`}>{item}</Label>\r\n                                        <Input type=\"number\" id={`code${item}`} innerRef={(value) => this[`code${item}`] = value} />\r\n                                    </FormGroup> */}\r\n                            </div>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label>Price</Label>\r\n                            <Input type=\"number\" onChange={event => {this.handleChange(\"price\", parseInt(event.target.value))}} />\r\n                        </FormGroup>\r\n                            \r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"success\" onClick={this.btSubmit}>Submit</Button>\r\n                        <Button color=\"warning\" onClick={() => this.setState({modalOpen: !modalOpen})}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default AddProduct;","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Button, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\nimport Swal from 'sweetalert2';\r\nimport { API_URL } from '../support/url';\r\n\r\nclass EditProduct extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            id: props.data.id,\r\n            name: props.data.name,\r\n            brand: props.data.brand,\r\n            category: props.data.category,\r\n            colour: props.data.colour,\r\n            description: props.data.description,\r\n            price: props.data.price,\r\n            stock: props.data.stock,\r\n            images: props.data.images,\r\n            sizeShoes: [38, 39, 40, 41, 42],\r\n            sizeClothing: [\"S\", \"M\", \"L\", \"XL\", \"XXL\"],\r\n            listGambar: [\"images1\", \"images2\", \"images3\", \"images4\", \"images5\"]\r\n        }\r\n    }\r\n\r\n    \r\n    handleChange = (property, value) => {\r\n        this.setState({ [property]: value })\r\n    }\r\n\r\n    renderInputStock = () => {\r\n        let { category, stock } = this.state\r\n        return this.state[`size${category}`].map((item, index) => {\r\n            return (\r\n                <FormGroup>\r\n                    <Label>{item}</Label>\r\n                    <Input type=\"number\" defaultValue={stock[index].total} \r\n                    innerRef={value => this[`code${item}`] = value}\r\n                    />\r\n                </FormGroup>\r\n            )\r\n        })\r\n    }\r\n\r\n    btSave = (id) => {\r\n        // // versi PR\r\n        // let { name, brand, colour, category, price, description, stock, images, listGambar } = this.state\r\n        \r\n        // // PR => Me-replace stock[idx].total menggunakan variable penampung\r\n        // let stock = [...this.state.stock]\r\n        // this.state[`size${category}`].forEach((item, index) => {\r\n            //     let value = this[`code${item}`].value\r\n        //     stock[index].total = value\r\n        // })\r\n\r\n        // let images = [...this.state.images]\r\n        // this.state.listGambar.forEach((item, index) => {\r\n        //     let value = this[item].value\r\n        //     images[index] = value\r\n        // })\r\n        let { name, brand, colour, category, price, description, stock, images, listGambar } = this.state\r\n        \r\n        // Mentor => Me-replace menggunakan splice\r\n        this.state[`size${category}`].forEach((item, index) => {\r\n            stock.splice(index, 1, { code: item, total: parseInt(this[`code${item}`].value) })\r\n        })\r\n\r\n        listGambar.forEach((item, index) => {\r\n            images.splice(index, 1, this[item].value)\r\n        })\r\n\r\n        Axios.patch(API_URL + `/products/${id}`, {name, brand, colour, category, price, description, images, stock})\r\n        .then((res) => {\r\n            console.log(\"PATCH btSave: \", res.data)\r\n            this.props.getProducts()\r\n            this.props.editClose()\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Success',\r\n                text: 'Product Successfully Updated'\r\n            })\r\n\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"ERR btSave: \", err)\r\n        })\r\n\r\n    }\r\n\r\n    render() { \r\n        console.log(\"cek edit: \", this.state.stock)\r\n        let { id, name, brand, colour, category, price, description, images, listGambar} = this.state\r\n        return (  \r\n            <div>\r\n                <Modal isOpen={this.props.editOpen}>\r\n                    <ModalHeader>Edit {this.props.selectedIdx + 1}</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form>\r\n                            <FormGroup>\r\n                                <Label>Name</Label>\r\n                                <Input value={name} type=\"text\" onChange={event => this.handleChange(\"name\", event.target.value)} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Images</Label>\r\n                                <div className=\"d-flex flex-wrap\">\r\n                                    {\r\n                                        listGambar.map((item, index) => {\r\n                                            return <Input style={{ width: \"30%\"}} \r\n                                                    type=\"text\" \r\n                                                    defaultValue={images[index]} \r\n                                                    innerRef= { value => this[item] = value}\r\n                                                    />\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </FormGroup>\r\n                            <div className=\"row\">\r\n                                <FormGroup className=\"col-md-4\">\r\n                                    <Label>Brand</Label>\r\n                                    <Input value={brand} type=\"text\" onChange={event => this.handleChange(\"brand\", event.target.value)} />\r\n                                </FormGroup>\r\n                                <FormGroup className=\"col-md-4\">\r\n                                    <Label>Category</Label>\r\n                                    <Input type=\"select\" value={category} onChange={event => this.handleChange(\"brand\", event.target.value)}>\r\n                                        <option>Select...</option>\r\n                                        <option value=\"Shoes\">Shoes</option>\r\n                                        <option value=\"Clothing\">Clothing</option>\r\n                                    </Input>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"col-md-4\">\r\n                                    <Label>Colour</Label>\r\n                                    <Input value={colour} type=\"text\" onChange={event => this.handleChange(\"colour\", event.target.value)} />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <FormGroup>\r\n                                <Label>Description</Label>\r\n                                <Input value={description} type=\"textarea\" onChange={event => this.handleChange(\"description\", event.target.value)} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Stock</Label>\r\n                                <div className=\"d-flex\">\r\n                                    {this.renderInputStock()}\r\n                                </div>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Price</Label>\r\n                                <Input value={price} type=\"number\" onChange={event => this.handleChange(\"price\", parseInt(event.target.value))} />\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"success\" onClick={() => this.btSave(id)}>Save</Button>\r\n                        <Button color=\"secondary\" onClick={this.props.editClose}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default EditProduct;","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Badge, Button, Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Table } from 'reactstrap';\r\nimport AddProduct from '../component/addProduct';\r\nimport EditProduct from '../component/editProduct';\r\nimport { API_URL } from '../support/url';\r\nimport { connect } from 'react-redux';\r\nimport { getProducts } from '../redux/actions'\r\n\r\nclass ProductManagement extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            // dbProducts: [],\r\n            selectedIdx: null,\r\n            editOpen: false,\r\n            total: 0,\r\n            sortProduct: \"default\",\r\n            isOpen: \"false\",\r\n        }\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.getProducts()\r\n    // }\r\n\r\n    // getProducts = () => {\r\n    //     Axios.get(API_URL + '/products')\r\n    //     .then((res) => {\r\n    //         console.log(\"GET products\", res.data)\r\n    //         this.setState({dbProducts: res.data})\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         console.log(\"ERR getProduct\", err)\r\n    //     })\r\n    // }\r\n\r\n    renderStock = (stock) => {\r\n        return stock.map((item, index) => {\r\n            return (\r\n                <h6 key={index}><Badge color=\"primary\">size {item.code} | stock : {item.total}</Badge></h6>\r\n            )\r\n        })\r\n    }\r\n\r\n    btDelete = (id) => {\r\n        console.log(\"CEK btDelete id:\", id)\r\n        Axios.delete(API_URL + `/products/${id}`)\r\n        .then((res) => {\r\n            console.log(\"DELETE btDelete: \", res.data)\r\n            this.getProducts()\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"ERR btDelete: \", err)\r\n        })\r\n    }\r\n\r\n    renderProducts = (params) => {\r\n        let products = [...this.props.products]\r\n        console.log(\"cek variable products\", products)\r\n\r\n        let temp = 0\r\n        for (let i = 0; i < products.length; i++) {\r\n            for (let j = 0; j < products[i].stock.length; j++) {\r\n                temp += products[i].stock[j].total\r\n            }\r\n            products[i].totalStock = temp\r\n            temp = 0\r\n        }\r\n        console.log(\"after forloops\", products)\r\n\r\n        if (params === \"asc\") {\r\n            products.sort((a, b) => (a.name > b.name && 1) || (a.name === b.name ? 0 : -1))\r\n            // console.log(\"product sort asc\", products)\r\n        } else if ( params === \"desc\") {\r\n            products.sort((a, b) => (a.name < b.name && 1) || (a.name === b.name ? 0 : -1))\r\n        } else if ( params === \"stockAsc\") {\r\n            products.sort((a, b) => (a.totalStock > b.totalStock && 1) || (a.totalStock === b.totalStock ? 0 : -1))\r\n        } else if ( params === \"stockDesc\") {\r\n            products.sort((a, b) => (a.totalStock < b.totalStock && 1) || (a.totalStock === b.totalStock ? 0 : -1))\r\n        } else if ( params === \"priceAsc\") {\r\n            products.sort((a, b) => (a.price > b.price && 1) || (a.price === b.price ? 0 : -1))\r\n        } else if ( params === \"priceDesc\") {\r\n            products.sort((a, b) => (a.price < b.price && 1) || (a.price === b.price ? 0 : -1))\r\n        }\r\n\r\n        return products.map((item, index) => {\r\n                return (\r\n                    <tr key={index}>\r\n                        <th>{index + 1}</th>\r\n                        <td>\r\n                            <Link to={`/product-detail?id=${item.id}`}>\r\n                                <img src={item.images[0]} height=\"200px\" />\r\n                            </Link>\r\n                        </td>\r\n                        <td>\r\n                            <Link to={`/product-detail?id=${item.id}`}>\r\n                                {item.name}\r\n                            </Link>\r\n                        </td>\r\n                        <td>{item.brand}</td>\r\n                        <td>{item.category}</td>\r\n                        <td>{item.colour.toLowerCase()}</td>\r\n                        <td className=\"text-justify font-italic\">{item.description.slice(0,80)}<span className=\"text-muted\">[...]</span></td>\r\n                        <td>\r\n                            {this.renderStock(item.stock)} \r\n                            <Badge color=\"danger\">Total Stock : {item.totalStock}</Badge>                            \r\n                        </td>\r\n                        <td>IDR. {item.price.toLocaleString()}</td>\r\n                        <td>\r\n                            <Button color=\"warning\" \r\n                                onClick={() => this.setState({editOpen:!this.state.editOpen, selectedIdx: index})\r\n                                }>Edit</Button>\r\n                            <Button color=\"danger\" onClick={() => this.btDelete(item.id)}>Delete</Button>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n        })\r\n    }\r\n\r\n    render() { \r\n        return (  \r\n            <div className=\"container\">\r\n                <h3 className=\"text-center my-3\">Products Management</h3>\r\n                <Dropdown direction=\"right\" isOpen={!this.state.isOpen} toggle={() => this.setState({isOpen: !this.state.isOpen})} >\r\n                    <DropdownToggle caret>\r\n                        Sort by\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                        <DropdownItem onClick={() => {this.setState({sortProduct: \"default\"})}}>Default</DropdownItem>\r\n                        <DropdownItem divider />\r\n                        <DropdownItem onClick={() => {this.setState({sortProduct: \"asc\"})}}>Ascending</DropdownItem>\r\n                        <DropdownItem onClick={() => {this.setState({sortProduct: \"desc\"})}}>Descending</DropdownItem>\r\n                        <DropdownItem divider />\r\n                        <DropdownItem onClick={() => {this.setState({sortProduct: \"stockAsc\"})}}>Smallest Amount Stock</DropdownItem>\r\n                        <DropdownItem onClick={() => {this.setState({sortProduct: \"stockDesc\"})}}>Largest Amount Stock</DropdownItem>\r\n                        <DropdownItem divider />\r\n                        <DropdownItem onClick={() => {this.setState({sortProduct: \"priceAsc\"})}}>Cheapest</DropdownItem>\r\n                        <DropdownItem onClick={() => {this.setState({sortProduct: \"priceDesc\"})}}>Expensive</DropdownItem>\r\n                    </DropdownMenu>\r\n                </Dropdown>\r\n                <AddProduct getProduct={this.getProducts} />\r\n                <Table hover>\r\n                    <thead>\r\n                        <th>No.</th>\r\n                        <th>Image</th>\r\n                        <th>Name</th>\r\n                        <th>Brand</th>\r\n                        <th>Category</th>\r\n                        <th>Colour</th>\r\n                        <th>Description</th>\r\n                        <th>Stock</th>\r\n                        <th>Price</th>\r\n                        <th>Action</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderProducts(this.state.sortProduct)}\r\n                    </tbody>\r\n                </Table>\r\n                {\r\n                    this.state.selectedIdx !== null \r\n                    && \r\n                    <EditProduct \r\n                        editOpen = {this.state.editOpen}\r\n                        editClose = {() => this.setState({editOpen: !this.state.editOpen, selectedIdx: null})} \r\n                        selectedIdx = {this.state.selectedIdx} \r\n                        data = {this.props.products[this.state.selectedIdx]}\r\n                        getProducts = {this.getProducts}\r\n                    />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({productReducers}) => {\r\n    console.log(\"mapstate\", productReducers)\r\n    return {\r\n        products: productReducers\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getProducts})(ProductManagement);","import React from 'react';\r\n\r\nexport default (props) => {\r\n    return (\r\n        <h1 className=\"text-center\">PAGE NOT FOUND</h1>\r\n    )\r\n}","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Button, Card, CardBody, CardDeck, CardImg, CardTitle, Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Form, Input, Modal, ModalBody, ModalFooter, ModalHeader, Table } from 'reactstrap';\r\nimport { API_URL } from '../support/url';\r\nimport { connect } from 'react-redux';\r\nimport { getSlide } from '../redux/actions'\r\n\r\nclass CarouselManagement extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            // dbCarousel: [],\r\n            selectedIdx: null,\r\n            modalOpen: false,\r\n            dropOpen: false,\r\n            newSlideOpen: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCarousel()\r\n    }\r\n\r\n    getCarousel = (order) => {\r\n        let url = order ? `/carousel?_sort=title&_order=${order}` : '/carousel'\r\n        Axios.get(API_URL + url)\r\n        .then((res) => {\r\n            console.log(\"RES getCarousel: \", res.data)\r\n            // this.setState({dbCarousel: res.data})\r\n            this.props.getSlide(res.data)\r\n            console.log(\"cek getSlide\", this.props.getSlide)\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"ERR getCarousel: \", err)\r\n        })\r\n    }\r\n\r\n    // renderCarousel = () => {\r\n    //     return this.props.slides.map((item, index) => {\r\n    //         return (\r\n    //             <tr key={index}>\r\n    //                 <th>{index + 1}</th>\r\n    //                 <td><img src={item.image} height=\"100px\" alt={item.title}/> </td>\r\n    //                 <td>\"{item.title}\"</td>\r\n    //                 {/* <td className=\"font-italic\">{item.image}</td> */}\r\n    //                 <td>\r\n    //                     <Button color=\"warning\" onClick={() => this.btEdit(index)}>Edit</Button>\r\n    //                     <Button color=\"danger\" onClick={() => this.btDelete(item.id)}>Delete</Button>\r\n    //                 </td>\r\n    //             </tr>\r\n    //         )\r\n    //     })\r\n    // }\r\n\r\n    renderCardSlide = () => {\r\n        return this.props.slides.map((item, index) => {\r\n            return (\r\n                <Card className=\"col-md-4\" key={index}>\r\n                    <CardImg height=\"200px\" src={item.image} alt={index} />\r\n                    <CardBody>\r\n                        <CardTitle>\"{item.title}\"</CardTitle>\r\n                        <Button style={{marginRight: 5}} color=\"warning\" onClick={() => this.btEdit(index)}>Edit</Button>\r\n                        <Button color=\"danger\" onClick={() => this.btDelete(item.id)}>Delete</Button>\r\n                    </CardBody>\r\n                </Card>\r\n            )\r\n        })\r\n    }\r\n\r\n    btDelete = (id) => {\r\n        Axios.delete(API_URL + `/carousel/${id}`)\r\n        .then((res) => {\r\n            console.log(\"SUCCESS btDelete\", res.data)\r\n            this.getCarousel()\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"ERR btDeleteSlide\", err)\r\n        })\r\n    }\r\n\r\n    btEdit = (index) => {\r\n        this.setState({selectedIdx: index, modalOpen: !this.state.modalOpen})\r\n        console.log(index)\r\n    }\r\n\r\n    btSave = (id) => {\r\n        let image = this.slideImg.value\r\n        let title = this.slideTitle.value\r\n\r\n        Axios.patch(API_URL + `/carousel/${id}`, {image, title})\r\n        .then((res) => {\r\n            console.log(\"Edit Success\", res.data)\r\n            this.getCarousel()\r\n            this.setState({ modalOpen: !this.state.modalOpen})\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"ERR btSaveSlide\", err)\r\n        })\r\n    }\r\n    \r\n    btSaveNewSlide = () => {\r\n        let image = this.newSlideImg.value\r\n        let title = this.newSlideTitle.value\r\n    \r\n        Axios.post(API_URL + `/carousel`, {image, title})\r\n        .then((res) => {\r\n            console.log(\"New Slide Success\", res.data)\r\n            this.getCarousel()\r\n            this.setState({ newSlideOpen: !this.state.newSlideOpen})\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"ERR newSlide\", err)\r\n        })\r\n    }\r\n\r\n    render() { \r\n        let { modalOpen, dbCarousel, selectedIdx } = this.state\r\n        return (  \r\n            <div className=\"container\">\r\n                <h3 className=\"text-center my-3\">Slide Management</h3>\r\n                <Button className=\"mb-2\" color=\"info\" onClick={() => this.setState({newSlideOpen: !this.state.newSlideOpen})}>Add New Slide</Button>\r\n                <Modal isOpen={this.state.newSlideOpen}>\r\n                    <ModalHeader toggle={() => this.setState({newSlideOpen: !this.state.newSlideOpen})}>Add New Slide</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form>\r\n                            <Input className=\"mb-2\" type=\"text\" placeholder=\"Slide Image\" innerRef={(value) => this.newSlideImg = value} />\r\n                            <Input type=\"text\" placeholder=\"Slide Title\" innerRef={(value) => this.newSlideTitle = value} />\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"success\" onClick={this.btSaveNewSlide}>Save</Button>\r\n                        <Button color=\"secondary\" onClick={() => this.setState({newSlideOpen: !this.state.newSlideOpen})} >Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Dropdown className=\"mb-2\" isOpen={this.state.dropOpen} toggle={() => this.setState({dropOpen: !this.state.dropOpen})}>\r\n                    <DropdownToggle caret>\r\n                        Sort\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                        <DropdownItem onClick={() => this.getCarousel(\"asc\")}>Ascending</DropdownItem>\r\n                        <DropdownItem onClick={() => this.getCarousel(\"desc\")}>Descending</DropdownItem>\r\n                    </DropdownMenu>\r\n                </Dropdown>\r\n                {/* <Table hover> */}\r\n                    {/* <thead> */}\r\n                        {/* <th>No.</th> */}\r\n                        {/* <th>Image</th> */}\r\n                        {/* <th>Title</th> */}\r\n                        {/* <th>Link</th> */}\r\n                        {/* <th>Action</th> */}\r\n                    {/* </thead> */}\r\n                    {/* <tbody> */}\r\n                        {/* {this.renderCarousel()} */}\r\n                    {/* </tbody> */}\r\n                {/* </Table> */}\r\n                <div className=\"row\">\r\n                    {this.renderCardSlide()}\r\n                </div>\r\n                {\r\n                    selectedIdx !== null &&\r\n                    <Modal isOpen={modalOpen}>\r\n                        <ModalHeader>\r\n                            Edit Slide\r\n                        </ModalHeader>\r\n                        <ModalBody>\r\n                            <Form>\r\n                                <Input type=\"text\" placeholder=\"Slide Image\" defaultValue={this.props.slides[selectedIdx].image} innerRef={(value) => this.slideImg = value} />\r\n                                <Input type=\"text\" placeholder=\"Slide Title\" defaultValue={this.props.slides[selectedIdx].title} innerRef={(value) => this.slideTitle = value} />\r\n                            </Form>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"success\" onClick={() => this.btSave(this.props.slides[selectedIdx].id)}>Save</Button>\r\n                            <Button color=\"secondary\" onClick={() => this.setState({modalOpen: !this.state.modalOpen, selectedIdx: null})}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(\"mapstate slides\", state.slideReducer.slide)\r\n    return {\r\n        slides: state.slideReducer.slide\r\n    }\r\n}\r\n \r\nexport default connect(mapStateToProps, {getSlide})(CarouselManagement);","export const getSlide = (data) => {\r\n    console.log(\"Action Slides\", data)\r\n    return {\r\n        type: \"GET_SLIDE\",\r\n        payload: data\r\n    }\r\n}","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Button, Table } from 'reactstrap';\r\nimport { API_URL } from '../support/url';\r\nimport { login, KeepLogin } from '../redux/actions'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass CartPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            selectedIdx: null\r\n        }\r\n    }\r\n\r\n    refreshCart = () => {\r\n        Axios.patch(API_URL + `/users/${this.props.id}`, { cart: this.props.cart})\r\n            .then((res) => {\r\n                console.log(\"SUCCESS Refresh\", res.data)\r\n                localStorage.setItem(\"id\", res.data.id)\r\n                this.props.login(res.data)\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERR Refresh\", err)\r\n            })\r\n    }\r\n\r\n    btIncrement = (index) => {\r\n        this.props.cart[index].qty += 1\r\n        this.props.cart[index].totalPrice = this.props.cart[index].price * this.props.cart[index].qty\r\n        console.log(this.props.cart[index].qty)\r\n        this.refreshCart()\r\n    }\r\n    \r\n    btDecrement = (index) => {\r\n        this.props.cart[index].qty -= 1\r\n        this.props.cart[index].totalPrice = this.props.cart[index].price * this.props.cart[index].qty\r\n        console.log(this.props.cart[index].qty)\r\n        this.refreshCart()\r\n    }\r\n\r\n    renderCart = () => {\r\n        return this.props.cart.map((item, index) => {\r\n            return (\r\n                <tr key={index}>\r\n                    <th>{index + 1}</th>\r\n                    <td><img src={item.images} alt={item.category} height=\"100px\"  /></td>\r\n                    <td>{item.name}</td>\r\n                    <td>{item.category}</td>\r\n                    <td>{item.size}</td>\r\n                    <div className=\"d-flex\">\r\n                        <Button onClick={() => this.btDecrement(index)}>-</Button> \r\n                            &nbsp;\r\n                            <p>{item.qty}</p>\r\n                            &nbsp;\r\n                        <Button onClick={() => this.btIncrement(index)}>+</Button>\r\n                    </div>\r\n                    <td>{item.price.toLocaleString()}</td>\r\n                    <td>{item.totalPrice.toLocaleString()}</td>\r\n                    <th>\r\n                        <Button color=\"danger\" onClick={() => this.btDelete(index)}>Delete</Button>\r\n                    </th>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    btDelete = (index) => {\r\n        this.props.cart.splice(index, 1)\r\n        this.refreshCart()\r\n    }\r\n\r\n    totalPayment = () => {\r\n        let payment = 0\r\n        this.props.cart.forEach( element => {\r\n            payment += element.totalPrice\r\n        })\r\n        return payment.toLocaleString()\r\n    }\r\n\r\n    decrementStock = (id, stock) => {\r\n        Axios.patch(API_URL + `/products/${id}`, stock)\r\n            .then((res) => {\r\n                console.log(\"decrementStock Success\", res.data)\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"decrementStock Error\", err)\r\n            })\r\n    }\r\n\r\n    btCheckout = () => {\r\n        let date = new Date()\r\n        let obj = {\r\n            iduser : this.props.id,\r\n            username : this.props.user.username,\r\n            date : date.getDate() + '/' + date.getMonth() + '/' + date.getFullYear(),\r\n            cart: this.props.cart,\r\n            status: \"Unpaid\"\r\n        }\r\n        console.log(\"cek OBJ\", obj)\r\n\r\n        // Melakukan looping untuk menemukan id product yang ada di cart dengan yang ada di database product\r\n        this.props.cart.forEach((item, index) => {\r\n            // Looping database product\r\n\r\n            // Cara 1\r\n            // this.props.product.forEach((value, idx) => {\r\n            //     // memberikan fungsi condition dari cart(item.idProduct) dengan product(value.id)\r\n            //     if (item.idProduct === value.id) {\r\n            //         console.log(\"sama\", item.idProduct, value.id)\r\n            //         let indexStock = value.stock.findIndex(element => element.code == item.size)\r\n            //         console.log(value.stock[indexStock])\r\n            //         value.stock[indexStock].total -= item.qty\r\n            //         this.decrementStock(value.id, {stock: value.stock})\r\n            //     }\r\n            // })\r\n\r\n            // Cara 2\r\n            // Mencari index product\r\n            let indexProduct = this.props.product.findIndex(value => value.id === item.idProduct)\r\n            // Mencari index stock\r\n            let indexStock = this.props.product[indexProduct].stock.findIndex(value => value.code === item.size)\r\n            this.props.product[indexProduct].stock[indexStock].total -= item.qty\r\n            this.decrementStock(item.idProduct, {stock: this.props.product[indexProduct].stock})\r\n\r\n        })\r\n\r\n\r\n        Axios.post(API_URL + '/userTransactions', obj)\r\n            .then((res) => {\r\n                console.log(\"Checkout Success\")\r\n                Axios.patch(API_URL + `/users/${this.props.id}`, {cart: []})\r\n                    .then((res) => {\r\n                        console.log(\"success checkout\", res.data)\r\n                        this.setState({ redirectStatus: true})\r\n                        this.props.KeepLogin()\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err)\r\n                    })\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Checkout Error\")\r\n            })\r\n    }\r\n\r\n\r\n    render() { \r\n        if (this.state.redirectStatus) {\r\n            return <Redirect to=\"/transaction\" />\r\n        }\r\n        \r\n        return (  \r\n            <div className=\"container\">\r\n                <Table hover>\r\n                    <thead>\r\n                        <th>No.</th>\r\n                        <th>Image</th>\r\n                        <th>Name</th>\r\n                        <th>Category</th>\r\n                        <th>Size</th>\r\n                        <th>Qty</th>\r\n                        <th>Price</th>\r\n                        <th>Total Price</th>\r\n                        <th>Action</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderCart()}\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <th colspan=\"7\" >Total Payment</th>\r\n                        <th>IDR. {this.totalPayment()}</th>\r\n                        <td><Button color=\"success\" onClick={() => this.btCheckout()}>Checkout</Button></td>\r\n                    </tfoot>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(\"cekDataCart\", state.authReducer)\r\n    return {\r\n        user: state.authReducer,\r\n        cart: state.authReducer.cart,\r\n        id: state.authReducer.id,\r\n        product: state.productReducers\r\n    }\r\n}\r\n\r\n// Jika hanya ingin mengambil data dari global store / reducer => mapStateToProps\r\n// Jika hanya meletakkan / menyimpan ke Reducer / global store, maka yg connect hanya ACTION (diimport dulu fungsinya), state HARUS dikosongkan (null) => connect(null, {fungsi}{CARTPAGE})\r\n// Jika butuh keduanya, makanya diisi keduanya seperti dibawah ini\r\n// kedua parameter connect tidak harus berhubungan, pakai yg dibutuhkan saja (mapstatetoprops vs {login})\r\nexport default connect(mapStateToProps, { login, KeepLogin })(CartPage);","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Button, Card, Table, UncontrolledCollapse } from 'reactstrap';\r\nimport Swal from 'sweetalert2';\r\nimport { API_URL } from '../support/url';\r\n\r\nclass TransactionPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            dbTransactions: [],\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.getTransaction()\r\n    }\r\n\r\n    getTransaction = () => {\r\n        Axios.get(API_URL + `/userTransactions?iduser=${localStorage.getItem(\"id\")}`)\r\n            .then((res) => {\r\n                console.log(\"userTransaction\", res.data)\r\n                this.setState({ dbTransactions: res.data })\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    renderDetail = (index) => {\r\n        return this.state.dbTransactions[index].cart.map((item, index) =>{\r\n            return (\r\n                    <tr key={index}>\r\n                        <th>{index + 1}</th>\r\n                        <td><img src={item.images} alt={item.category} height=\"100px\"  /></td>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.category}</td>\r\n                        <td>{item.size}</td>\r\n                        <td>{item.qty}</td>\r\n                        <td>{item.price.toLocaleString()}</td>\r\n                        <td>{item.totalPrice.toLocaleString()}</td>\r\n                    </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    totalPayment = (index) => {\r\n        let payment = 0\r\n        this.state.dbTransactions[index].cart.forEach( element => {\r\n            payment += element.totalPrice\r\n        })\r\n        return payment.toLocaleString()\r\n    }\r\n\r\n    renderTransactions = () => {\r\n        return this.state.dbTransactions.map((item, index) => {\r\n            return (\r\n                <>\r\n                <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{item.date}</td>\r\n                    <td>{item.username}</td>\r\n                    <td>{item.status}</td>\r\n                    <td>\r\n                        <Button style={{marginRight: 10}} id={`page${index}`} color=\"info\" >Detail</Button> \r\n                        <Button color=\"primary\" onClick={() => this.btPayment(item.id)}>Payment</Button>\r\n                    </td>\r\n                    </tr>\r\n                    <tr>\r\n                    <UncontrolledCollapse toggler={`#page${index}`}>\r\n                        <Card key={index}>\r\n                            <Table>\r\n                                <thead>\r\n                                    <th>No.</th>\r\n                                    <th>Product</th>\r\n                                    <th>Name</th>\r\n                                    <th>Category</th>\r\n                                    <th>Size</th>\r\n                                    <th>Qty</th>\r\n                                    <th>Price</th>\r\n                                    <th>Amount Price</th>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.renderDetail(index)}\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    <th colspan=\"7\" >Total Payment</th>\r\n                                    <th>IDR. {this.totalPayment(index)}</th>\r\n                                </tfoot>\r\n                            </Table>\r\n                        </Card>\r\n                    </UncontrolledCollapse>\r\n                </tr>\r\n            </>\r\n            )\r\n        })\r\n    }\r\n    \r\n    btPayment = (id) => {\r\n        Axios.patch(API_URL + `/userTransactions/${id}`, {status: \"Paid\"})\r\n            .then((res) => {\r\n                console.log(\"Paid Success\", res.data)\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: 'Product Successfully Updated'\r\n                })\r\n                this.getTransaction()\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    \r\n    render() { \r\n        return (  \r\n            <div className=\"container\">\r\n                <Table hover>\r\n                    <thead>\r\n                       <th>No</th>\r\n                       <th>Date</th>\r\n                       <th>Username</th>\r\n                       <th>Status</th>\r\n                       <th>Action</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderTransactions()}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default TransactionPage;","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Button, Card, CardBody, Collapse, Table, UncontrolledCollapse } from 'reactstrap';\r\nimport Swal from 'sweetalert2';\r\nimport { API_URL } from '../support/url';\r\n\r\nclass TransactionAdmin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            dbTransactions: [],\r\n            collapsOpen: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTransaction()\r\n    }\r\n\r\n    getTransaction = () => {\r\n        Axios.get(API_URL + \"/userTransactions\")\r\n            .then((res) => {\r\n                this.setState({dbTransactions: res.data})\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    totalPrice = (index) => {\r\n        let total = 0\r\n        this.state.dbTransactions[index].cart.map((element) =>{\r\n            total += element.totalPrice\r\n        })\r\n        return total\r\n    }\r\n\r\n    btDetail = (index) => {\r\n        let isOpen = false\r\n        return this.state.dbTransactions[index].cart.map((element) =>{\r\n            return (\r\n                <Collapse isOpen={true}>\r\n                    <Card>\r\n                        <CardBody>\r\n                            test\r\n                        </CardBody>\r\n                    </Card>\r\n                </Collapse>\r\n\r\n            )\r\n        })\r\n    }\r\n\r\n    renderDetail = (index) => {\r\n        return this.state.dbTransactions[index].cart.map((item, index) =>{\r\n            return (\r\n                    <tr key={index}>\r\n                        <th>{index + 1}</th>\r\n                        <td><img src={item.images} alt={item.category} height=\"100px\"  /></td>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.category}</td>\r\n                        <td>{item.size}</td>\r\n                        <td>{item.qty}</td>\r\n                        <td>{item.price.toLocaleString()}</td>\r\n                        <td>{item.totalPrice.toLocaleString()}</td>\r\n                    </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderTransactions = () => {\r\n        return this.state.dbTransactions.map((item, index) => {\r\n            let idtoogle = `toogler${item.id}`\r\n            return (\r\n                <>\r\n                    \r\n                    <tr key={index}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{item.date}</td>\r\n                        <td>{item.username}</td>\r\n                        <td>IDR. {this.totalPrice(index).toLocaleString()}</td>\r\n                        <td>{item.status}</td>\r\n                        <td>\r\n                            <Button style={{marginRight: 10}} id={`page${index}`} color=\"info\" >Detail</Button> \r\n                            <Button color={item.status !== \"Paid\" ? \"secondary\" : \"primary\"} disabled={item.status !== \"Paid\" ? true : false} onClick={() => this.btConfirm(item.id)}>{item.status !== \"Success\" ? \"Confirm\" : \"Done\"}</Button>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <UncontrolledCollapse toggler={`#page${index}`}>\r\n                            <Card key={index}>\r\n                                <Table>\r\n                                    <thead>\r\n                                        <th>No.</th>\r\n                                        <th>Product</th>\r\n                                        <th>Name</th>\r\n                                        <th>Category</th>\r\n                                        <th>Size</th>\r\n                                        <th>Qty</th>\r\n                                        <th>Price</th>\r\n                                        <th>Amount Price</th>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {this.renderDetail(index)}\r\n                                    </tbody>\r\n                                    <tfoot>\r\n                                        <th colspan=\"7\" >Total Payment</th>\r\n                                        <th>IDR. {this.totalPayment(index)}</th>\r\n                                    </tfoot>\r\n                                </Table>\r\n                            </Card>\r\n                        </UncontrolledCollapse>\r\n                    </tr>\r\n                </>\r\n            )\r\n        })\r\n    }\r\n\r\n    totalPayment = (index) => {\r\n        let payment = 0\r\n        this.state.dbTransactions[index].cart.forEach( element => {\r\n            payment += element.totalPrice\r\n        })\r\n        return payment.toLocaleString()\r\n    }\r\n\r\n    btConfirm = (id) => {\r\n        Axios.patch(API_URL + `/userTransactions/${id}`, {status: \"Success\"})\r\n        .then((res) => {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Success',\r\n                text: 'Payment Success'\r\n            })\r\n            this.getTransaction()\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    render() { \r\n        return (  \r\n            <div className=\"container\">\r\n                <Table>\r\n                    <thead>\r\n                        <th>No.</th>\r\n                        <th>Date</th>\r\n                        <th>Username</th>\r\n                        <th>Total Price</th>\r\n                        <th>Status</th>\r\n                        <th>Action</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderTransactions()}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default TransactionAdmin;","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport NavbarComponent from \"./component/navbar\";\nimport AboutPage from \"./pages/about\";\nimport HomePage from \"./pages/homepage\";\nimport ProductPage from \"./pages/product\";\nimport RegisterPage from \"./pages/register\";\nimport { API_URL } from \"./support/url\";\nimport Axios from \"axios\";\nimport ProductDetail from \"./pages/detailProduct\";\nimport ProductManagement from \"./pages/productManagement\";\nimport NotFound from \"./pages/notFound\";\nimport CarouselManagement from \"./pages/carouselManagement\";\nimport { connect } from 'react-redux';\nimport { login, getProducts, KeepLogin } from './redux/actions';\nimport CartPage from \"./pages/cartUser\";\nimport TransactionPage from \"./pages/transaction\";\nimport TransactionAdmin from \"./pages/adminTransaction\";\nimport FooterNavbar from \"./component/footer\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataUser: {}\n    };\n  }\n\n  componentDidMount() {\n    // this.keepLogin()\n    this.getProducts()\n    this.props.KeepLogin()\n  }\n\n  // keepLogin = () => {\n  //   let id = localStorage.getItem(\"id\")\n  //   if (id) {\n  //     Axios.get(API_URL + `/users?id=${id}`)\n  //     .then((res) => {\n  //       console.log(\"SUCCESS KeepLogin: \", res.data)\n  //       // VERSI NON-REDUX\n  //       // this.setState({ dataUser: res.data[0]})\n  //       this.props.login(res.data[0])\n  //     })\n  //     .catch((err) => {\n  //       console.log(\"ERR keepLogin: \", err)\n  //     })\n  //   }\n  // }\n\n  getProducts = () => {\n    Axios.get(API_URL + '/products')\n    .then((res) => {\n        console.log(\"GET Products: \", res.data)\n        this.props.getProducts(res.data)\n    })\n    .catch((err) => {\n        console.log(\"ERR getProducts: \", err)\n    })\n}\n\n\n  render() {\n    // let { dataUser } = this.state\n    return (\n      <div>\n        {/* VERSI NON REDUX */}\n        {/* <NavbarComponent user={this.state.dataUser} keep={this.keepLogin} state={() => this.setState({dataUser: {}})} /> */}\n        <NavbarComponent user={this.props.user} />\n        <Switch>\n          <Route path=\"/\" component={HomePage} exact />\n          <Route path=\"/product\" component={ProductPage}/>\n          <Route path=\"/register\" component={RegisterPage}/>\n          <Route path=\"/about\" component={AboutPage}/>\n          <Route path=\"/product-detail\" component={ProductDetail} />\n          {\n            // VERSI NON REDUX\n            // dataUser.role && dataUser.role===\"admin\" ?\n            // REDUX NON PENYERDEHANAAN\n            this.props.user.role && this.props.user.role===\"admin\" ?\n            // role && role===\"admin\" ?\n            <>\n              <Route path=\"/transaction-admin\" component={TransactionAdmin} />\n              <Route path=\"/product-admin\" component={ProductManagement} />\n              <Route path=\"/carousel-admin\" component={CarouselManagement} />\n            </>\n            :\n            <>\n              <Route path=\"/cart\" component={CartPage} />\n              <Route path=\"/transaction\" component={TransactionPage} />\n            </>\n          }\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n        {/* <FooterNavbar /> */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user : state.authReducer,\n    // role: state.authReducer.role\n  }\n}\n\nexport default connect(mapStateToProps, {login, getProducts, KeepLogin})(App);\n","import React from 'react';\r\n\r\nclass FooterNavbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n\r\n    render() { \r\n        return (  \r\n            <div className=\"container-fluid\">\r\n                <p>Copyright 2020 - Alex Kurniawan</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default FooterNavbar;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const INITIAL_STATE = {\r\n    id: null, \r\n    username: '',\r\n    email: '',\r\n    phone: '',\r\n    role: '',\r\n    cart: []\r\n}\r\n\r\nexport const authReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN\":\r\n            return {\r\n                // concat dengan state (objek pertama), jika ada nama yg sama, maka objek pertama akan digantikan dengan id yg baru (item dibawah ini)\r\n                ...state,\r\n                //dipecah karena tidak butuh password, menggantikan nama dari \"...state\" yang sama\r\n                id: action.payload.id,\r\n                username: action.payload.username,\r\n                email: action.payload.email,\r\n                phone: action.payload.phone,\r\n                cart: action.payload.cart,\r\n                role: action.payload.role\r\n            }\r\n        case \"LOGOUT\": \r\n            return INITIAL_STATE\r\n        default:\r\n            return state;\r\n    }\r\n}","const INITIAL_STATE = {\r\n    slide: []\r\n}\r\n\r\nexport const slideReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case \"GET_SLIDE\":\r\n            console.log(\"Reducers slides\", action.payload)\r\n            return {...state, slide: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { productReducers } from './productReducer';\r\nimport { slideReducer } from './slideReducer'\r\n\r\nexport const Reducer = combineReducers({\r\n    authReducer,\r\n    productReducers,\r\n    slideReducer\r\n})","// INITIAL_STATE dibuat jika ada lebih dari 1 golongan data/property yg perlu diisi - disimpan ke dalam reducer\r\n// const INITIAL_STATE = {\r\n//     productList: [],\r\n//     product_form: {\r\n//         name:\r\n//     }\r\n// }\r\n\r\n\r\nexport const productReducers = (state = [], action) => {\r\n    switch(action.type) {\r\n        case \"GET_PRODUCTS\":\r\n            console.log(\"Reducer products\", action.payload)\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter} from 'react-router-dom';\n// fungsi createStore : Digunakan untuk membuat global store dari combine Reducer\nimport { applyMiddleware, createStore } from 'redux';\n// provider : Digunakan untuk menghubungkan antara component, action dan reducer\nimport { Provider } from 'react-redux';\nimport { Reducer } from './redux/reducers';\nimport ReduxThunk from 'redux-thunk';\n\nconst storeReducer = createStore(Reducer, {}, applyMiddleware(ReduxThunk))\nReactDOM.render(\n  <Provider store={storeReducer}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}